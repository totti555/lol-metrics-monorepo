/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/champions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get list of champions
         * @description Returns all available champions (mocked)
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success - List of champions */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Champion"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/summoner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get summoner info with last matches */
        get: {
            parameters: {
                query: {
                    /**
                     * @description Player name
                     * @example TottiSkyZz
                     */
                    name: string;
                    /**
                     * @description Player tag line
                     * @example 8256
                     */
                    tagLine: string;
                    /**
                     * @description Player platform ID
                     * @example EUW1
                     */
                    platformId: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Summoner info with last matches */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Summoner"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Champion: {
            /**
             * @description Unique identifier for the champion
             * @example 1
             */
            id: string;
            /**
             * @description Name of the champion
             * @example Ahri
             */
            name: string;
            /**
             * @description Technical alias for asset resolution
             * @example Ahri
             */
            alias: string;
            /**
             * @description Champion subtitle
             * @example the Nine-Tailed Fox
             */
            description: string;
            /**
             * @description URL to square icon portrait
             * @example https://cdn.communitydragon.org/latest/lol-game-data/assets/v1/champion-icons/103.png
             */
            squarePortrait: string;
            /**
             * @description URL to splash art (centered)
             * @example https://cdn.communitydragon.org/latest/champion/Ahri/splash-art
             */
            clientPortrait?: string;
            roles: components["schemas"]["Role"][];
            /**
             * @description Release date of the champion
             * @example 2025-06-21
             */
            releaseDate?: string;
            /**
             * @description The region or origin the champion belongs to in the League of Legends universe
             * @example Piltover
             */
            world?: string;
        };
        ChampionDetails: {
            /**
             * @description Unique identifier for the champion
             * @example 1
             */
            id: string;
            /**
             * @description Name of the champion
             * @example Ahri
             */
            name: string;
            /**
             * @description Technical alias for asset resolution
             * @example Ahri
             */
            alias: string;
            /** @description Champion subtitle displayed on lists */
            description: string;
            /** @description Long biography used on champion detail page */
            bio: string;
            /**
             * @description Release date of the champion
             * @example 2025-06-21
             */
            releaseDate?: string;
            /**
             * @description URL to square icon portrait
             * @example https://cdn.communitydragon.org/latest/lol-game-data/assets/v1/champion-icons/103.png
             */
            squarePortrait: string;
            /**
             * @description The region or origin the champion belongs to in the League of Legends universe
             * @example Piltover
             */
            world?: string;
            tacticalInfo: {
                /**
                 * @description Indicates whether the champion is melee or ranged
                 * @enum {string}
                 */
                attackType?: "melee" | "ranged";
                /**
                 * @description Main type of damage
                 * @enum {string}
                 */
                damageType?: "kPhysical" | "kMagic" | "kMixed";
            };
            playstyleInfo?: {
                /** @description Damage level from 1 to 3 */
                damage?: number;
                /** @description Durability level from 1 to 3 */
                durability?: number;
                /** @description Crowd control potential from 1 to 3 */
                crowdControl?: number;
                /** @description Mobility level from 1 to 3 */
                mobility?: number;
                /** @description Utility level from 1 to 3 */
                utility?: number;
            };
            /** @description List of the different skins */
            skins: components["schemas"]["Skin"][];
            roles: components["schemas"]["Role"][];
            spells: {
                P?: components["schemas"]["Spell"];
                Q?: components["schemas"]["Spell"];
                W?: components["schemas"]["Spell"];
                E?: components["schemas"]["Spell"];
                R?: components["schemas"]["Spell"];
            };
        };
        /** @enum {string} */
        Role: "Top" | "Jungle" | "Mid" | "Bottom" | "Support";
        Skin: {
            /**
             * @description Unique ID of the skin
             * @example 1000
             */
            id: number;
            /**
             * @description Display name of the skin
             * @example Annie
             */
            name: string;
            /**
             * @description Indicates if this is the base/default skin
             * @example true
             */
            isBase: boolean;
            /**
             * @description Path to the uncentered splash image
             * @example https://cdn.communitydragon.org/latest/assets/characters/annie/skins/skin01/images/annie_splash_uncentered_1.jpg
             */
            image: string;
            /**
             * @description Rarity of the skin
             * @example kLegendary
             */
            rarity: string;
            price?: number | string;
        };
        Spell: {
            /**
             * @description Name of the spell
             * @example Disintegrate
             */
            name: string;
            /**
             * @description Path to the spell's icon image
             * @example /lol-game-data/assets/ASSETS/Characters/Annie/HUD/Icons2D/Annie_Q.png
             */
            icon: string;
            /**
             * @description Path to the spell's preview video
             * @example champion-abilities/0001/ability_0001_Q1.webm
             */
            video: string;
            /**
             * @description Text description of the ability
             * @example Annie hurls a Mana infused fireball, dealing damage and refunding the Mana cost if it destroys the target.
             */
            description: string;
        };
        Summoner: {
            /** @example TottiSkyZz */
            name: string;
            /** @example 8256 */
            tagLine: string;
            /** @example 488 */
            profileIconId: number;
            /** @example 1700000000000 */
            revisionDate: number;
            /** @example 30 */
            summonerLevel: number;
            lastMatches?: components["schemas"]["Match"][];
        };
        Match: {
            /**
             * @description Duration of the match in seconds
             * @example 1800
             */
            gameDuration: number;
            /**
             * @description Unix timestamp (ms) of match creation
             * @example 1670000000000
             */
            gameCreation: number;
            playerStats: {
                /** @example 103 */
                championId: number;
                /** @example 10 */
                kills: number;
                /** @example 2 */
                deaths: number;
                /** @example 5 */
                assists: number;
                /** @example 200 */
                cs: number;
                /** @example true */
                win: boolean;
                role: string;
                /** @example [
                 *       1055,
                 *       3006,
                 *       3087,
                 *       3031,
                 *       3074,
                 *       3046
                 *     ] */
                items: number[];
                /**
                 * Format: float
                 * @example 0.75
                 */
                killParticipation?: number;
            };
            /** @example [
             *       103,
             *       45,
             *       240,
             *       7,
             *       12,
             *       64,
             *       99,
             *       33,
             *       55,
             *       120
             *     ] */
            championIdsInMatch: number[];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
